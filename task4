# Just setting things up — ignore this if running somewhere pre-installed
# !pip install pandas scikit-learn

import pandas as p
from sklearn.feature_extraction.text import TfidfVectorizer as V
from sklearn.metrics.pairwise import linear_kernel as lk

# I’ll keep the dataset small — no need to go overboard here
d = {
    't': ['The Matrix', 'Inception', 'Interstellar', 'The Prestige', 'The Dark Knight'],
    'desc': [
        'A computer hacker learns about the true nature of reality and his role in the war against its controllers.',
        'A thief steals corporate secrets through dream-sharing technology.',
        'A team travels through a wormhole in space to ensure humanity’s survival.',
        'Two stage magicians engage in a battle to create the ultimate illusion.',
        'Batman faces a criminal mastermind known as the Joker.'
    ]
}

# dataframe = df = p.DataFrame(data) ... but let’s just go with s
s = p.DataFrame(d)

# convert text to vectors, no stopwords (I think this is good enough)
v = V(stop_words='english')
m = v.fit_transform(s['desc'])

# get cosine similarities (kinda magic)
sim = lk(m, m)

# ok, quick mapping titles to index (note: case-sensitive for now)
i = p.Series(s.index, index=s['t'])

def r(x, sim=sim):
    try:
        j = i[x]
    except:
        print('uh oh, not found:', x)
        return []

    # get scores
    pairs = list(enumerate(sim[j]))

    # sort it, first is itself (duh), so skip that
    pairs = sorted(pairs, key=lambda z: z[1], reverse=True)[1:4]

    # just grabbing the indices
    idxs = [z[0] for z in pairs]

    # return top titles (3 of em)
    return s['t'].iloc[idxs]

# try it
print(r('Inception'))
