import math

# Initialize the game board
game_board = [' ' for _ in range(9)]

# Display the current game board
def show_board(board):
    for row in range(3):
        print(" | ".join(board[row*3:(row+1)*3]))
        if row < 2:
            print("---------")

# Check if a player has won
def has_winner(board, player_symbol):
    winning_patterns = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # Rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # Columns
        [0, 4, 8], [2, 4, 6]              # Diagonals
    ]
    for pattern in winning_patterns:
        if all(board[i] == player_symbol for i in pattern):
            return True
    return False

# Check if the board is full and it's a draw
def is_draw(board):
    return ' ' not in board

# Minimax algorithm implementation
def minimax(board, is_ai_turn):
    if has_winner(board, 'O'):
        return 1
    elif has_winner(board, 'X'):
        return -1
    elif is_draw(board):
        return 0

    if is_ai_turn:
        best_score = -math.inf
        for i in range(9):
            if board[i] == ' ':
                board[i] = 'O'
                score = minimax(board, False)
                board[i] = ' '
                best_score = max(score, best_score)
        return best_score
    else:
        best_score = math.inf
        for i in range(9):
            if board[i] == ' ':
                board[i] = 'X'
                score = minimax(board, True)
                board[i] = ' '
                best_score = min(score, best_score)
        return best_score

# Find the best move for the AI
def get_ai_move(board):
    best_score = -math.inf
    best_move = -1
    for i in range(9):
        if board[i] == ' ':
            board[i] = 'O'
            score = minimax(board, False)
            board[i] = ' '
            if score > best_score:
                best_score = score
                best_move = i
    return best_move

# Start the game loop
def start_game():
    print("Tic-Tac-Toe Game")
    print("Player is 'X', AI is 'O'")
    show_board(game_board)

    while True:
        # Player move
        try:
            player_input = int(input("Enter your move (1-9): ")) - 1
            if game_board[player_input] != ' ':
                print("Invalid move. Position already taken.")
                continue
        except (ValueError, IndexError):
            print("Invalid input. Enter a number from 1 to 9.")
            continue

        game_board[player_input] = 'X'
        show_board(game_board)

        if has_winner(game_board, 'X'):
            print("Player wins.")
            break
        if is_draw(game_board):
            print("Draw.")
            break

        # AI move
        print("AI move:")
        ai_move = get_ai_move(game_board)
        game_board[ai_move] = 'O'
        show_board(game_board)

        if has_winner(game_board, 'O'):
            print("AI wins.")
            break
        if is_draw(game_board):
            print("Draw.")
            break

# Run the game
start_game()
